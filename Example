local finity = {}
finity.gs = {}

---- Data stored by finity to be used for later
local finityData = {
    UpConnection = nil,
    ToggleKey = Enum.KeyCode.Home,
    CanToggle = true,
    UsedKeybinds = {}
}

local finityObject = {}
local self2 = finityObject
local self = finity

local getasset = getsynasset or getcustomasset or function(id) return "rbxasset://"..id end

local requestfunc = syn and syn.request or http and http.request or http_request or fluxus and fluxus.request or request or function(data)
    if data.Method == "GET" then
        return {
            Body = game:HttpGet(data.Url, true),
            Headers = {},
            StatusCode = 200
        }
    else
        return {
            Body = "Unable to access resource.",
            Headers = {},
            StatusCode = 404
        }
    end
end 

if not writefile then
    print("Your executor does not support the writefile() function. We do not support your injector.")
end

local Asset_Names = {
    "Arrow.png",
    "CheatBackground.png",
    "CheatBoxStuff.png",
    "CheatList.png",
    "CheatSliderbar.png",
    "CheatVisiFrame.png",
    "DropDown.png",
    "NotifSound.wav",
    "HSVBar.png",
    "InfoNotification.png",
    "NotificationBar.png",
    "ScrollBar.png",
    "Success.png",
    "WarningNotification.png",
    "WindowBlur.png",
    "lumienceimage.png"
}

local DFAA = function()
    makefolder('FinityGUI')
    makefolder('FinityGUI/assets')
    makefolder('FinityGUI/assets/custom')
    writefile("FinityGUI/FinityDosAndDonts.txt", requestfunc(({ Url = "https://raw.githubusercontent.com/LocalSmail/Finity/main/things/DosAndDont", Method = "GET" })).Body)

    if not isfile('FinityGUI/Customthemes.lua') then
        writefile('FinityGUI/Customthemes.lua', requestfunc(({ Url = "https://raw.githubusercontent.com/LocalSmail/Finity/main/CustomThemeTemplate.lua", Method = "GET" })).Body)
    end

    for i, v in Asset_Names do
        writefile('FinityGUI/assets/'..v, requestfunc(({ Url = "https://raw.githubusercontent.com/LocalSmail/Finity/main/assets/"..v, Method = "GET" })).Body)
    end
end

if not isfolder('FinityGUI') then
    print('Creating FinityGUI folders and downloading assets in workspace.')
    DFAA()
end

finity.themes = {
    ["Dark"] = {
        main_container = Color3.fromRGB(32, 32, 33),
        separator_color = Color3.fromRGB(63, 63, 65),
        text_color = Color3.fromRGB(206, 206, 206),
        category_button_background = Color3.fromRGB(63, 62, 65),
        category_button_border = Color3.fromRGB(72, 71, 74),
        checkbox_checked = Color3.fromRGB(132, 255, 130),
        checkbox_checked_inner = Color3.fromRGB(141, 245, 139),
        checkbox_outer = Color3.fromRGB(84, 81, 86),
        checkbox_inner = Color3.fromRGB(132, 132, 136),
        slider_color = Color3.fromRGB(177, 177, 177),
        slider_color_sliding = Color3.fromRGB(132, 255, 130),
        slider_background = Color3.fromRGB(88, 84, 90),
        slider_text = Color3.fromRGB(177, 177, 177),
        textbox_background = Color3.fromRGB(103, 103, 106),
        textbox_background_hover = Color3.fromRGB(137, 137, 141),
        textbox_text = Color3.fromRGB(195, 195, 195),
        textbox_text_hover = Color3.fromRGB(232, 232, 232),
        textbox_placeholder = Color3.fromRGB(135, 135, 138),
        dropdown_background = Color3.fromRGB(88, 88, 91),
        dropdown_text = Color3.fromRGB(195, 195, 195),
        dropdown_text_hover = Color3.fromRGB(232, 232, 232),
        dropdown_scrollbar_color = Color3.fromRGB(118, 118, 121),
        dropdown_scrollbar_thickness = 4,
        button_background = Color3.fromRGB(103, 103, 106),
        button_background_hover = Color3.fromRGB(137, 137, 141),
        button_background_down = Color3.fromRGB(70, 70, 81),
        scrollbar_color = Color3.fromRGB(118, 118, 121),
        notification_warn = Color3.fromRGB(236, 129, 44),
        notification_success = Color3.fromRGB(139, 217, 45),
        notification_info = Color3.fromRGB(206, 206, 206),
        NotifSound = "FinityGUI/assets/NotifSound.wav",
    }
}

function finity:DownloadCustomAsset(link, AssetName, IsCustomThemeFile)
    print("Downloading custom asset from: "..link)
    if not IsCustomThemeFile then
        writefile('FinityGUI/assets/custom/'..AssetName, requestfunc(({ Url = link, Method = "GET" })).Body)
    elseif IsCustomThemeFile and (AssetName == nil or AssetName == "" or AssetName == " ") then
        print("Downloading custom Customtheme.lua file")
        writefile('FinityGUI/Customthemes.lua', requestfunc(({ Url = link, Method = "GET" })).Body)
    elseif IsCustomThemeFile then
        print("Downloading custom Customtheme.lua file.")
        warn("Tip: You dont have to put anything inside the AssetName argument, We parse the file name by default!")
        writefile('FinityGUI/Customthemes.lua', requestfunc(({ Url = link, Method = "GET" })).Body)
    end
end

local GetAssetFunc = function(path)
    return getasset(path)
end

function finity.ImportCustomThemes(Theme_Name)
    local CustomthemeScript = loadfile("FinityGUI/Customthemes.lua")()
    local themes = CustomthemeScript.CustomThemes
    for Theme_Name, Theme_Data in pairs(themes) do
        finity.themes[Theme_Name] = Theme_Data
    end
end

local Version = "1.0.2 (4)"
local Discord = requestfunc({ Url = "https://raw.githubusercontent.com/LocalSmail/Finity/main/discord", Method = "GET"}).Body
local HubMode = false
local debug = false
local theme = finity.themes.Dark

setmetatable(finity.gs, {
    __index = function(_, service)
        return game:GetService(service)
    end,
    __newindex = function(t, i)
        t[i] = nil
    end
})

function finity:EnableHubMode(Enable) 
    HubMode = Enable == true
    if typeof(Enable) ~= "boolean" then
        warn("Please parse a boolean value. (true/false)")
        HubMode = false
    end
end

local suc, err = pcall(function()
    if game.Loaded then
        task.delay(1.5, function()
            if not HubMode then
                print([[
                    _____ ___ _   _ ___ _______   __
                    |  ___|_ _| \ | |_ _|_   _\ \ / /
                    | |_   | ||  \| || |  | |  \ V /
                    |  _|  | || |\  || |  | |   | |
                    |_|   |___|_| \_|___| |_|   |_|
                ]])
                print("You are using Finity version "..Version)
                print("If you want Help, Found a Bug with the GUI, Have a suggestion or Just enjoy Finity, Join our Discord Community: "..Discord.." :D")
            end
        end)

        local mouse = finity.gs["Players"].LocalPlayer:GetMouse()

        function finity:Create(class, properties)
            local object = Instance.new(class)
            for prop, val in next, properties do
                if object[prop] and prop ~= "Parent" then
                    object[prop] = val
                end
            end
            return object
        end

        function finity:RedownloadAssets()
            if finity.gs["CoreGui"]:FindFirstChild("Finity") then
                finity.gs["CoreGui"]:FindFirstChild("Finity"):Destroy()
            end
            DFAA()
            warn("Please wait while we re-download finity's assets again.")
        end

        function finity:setTitle(text)
            self2.title.Text = text
        end

        function finity:addShadow(object, transparency)
            if transparency > 1 then transparency = 0.5 end
            local shadow = self:Create('ImageLabel', {
                Name = "Shadow",
                AnchorPoint = Vector2.new(0.51, 0.51),
                BackgroundTransparency = 1,
                Position = UDim2.new(0.5, 0, 0.5, 4),
                Size = UDim2.new(1, 6, 1, 6),
                Image = GetAssetFunc("FinityGUI/assets/WindowBlur.png"),
                ImageTransparency = transparency or 0.5,
                ImageColor3 = Color3.fromRGB(35, 35, 35),
                ScaleType = Enum.ScaleType.Slice,
                SliceCenter = Rect.new(10, 10, 120, 120),
                Active = true,
            })
            shadow.Parent = object
        end

        function finity:PlaySound(Sound_Path)
            if finity.gs["CoreGui"]:FindFirstChild("Finity") and finity.gs["CoreGui"]:FindFirstChild("Finity")["Sound"] then
                local sound = finity.gs["CoreGui"]:FindFirstChild("Finity")["Sound"]
                sound.SoundId = GetAssetFunc(Sound_Path)
                sound.TimePosition = 0
                sound:Play()
            else
                local s = Instance.new("Sound")
                s.Name = "Sound"
                s.SoundId = GetAssetFunc(Sound_Path)
                s.Volume = 1
                s.Looped = false
                s.archivable = true
                s.TimePosition = 0
                s.Parent = game.Workspace
                s:Play()
            end
        end

        function finity.new(Title, IsDark, CustomTheme, CustomThemeName, HideToolTip, ToolTipText)
            if Title == "" or Title == " " or Title == nil then
                Title = 'Press: '.. string.sub(tostring(finityData.ToggleKey), 14) ..' to hide the Gui.'
            end

            if finity.gs["CoreGui"]:FindFirstChild("Finity") then
                finity.gs["CoreGui"]:FindFirstChild("Finity"):Destroy()
            end

            local thinProject = false
            local toggled = true
            local typing = false
            local firstCategory = true
            local savedposition = UDim2.new(0.5, 0, 0.5, 0)

            -- Принудительное использование тёмной темы
            if CustomTheme then
                theme = finity.themes[CustomThemeName] or finity.themes.Dark
            else
                theme = finity.themes.Dark
            end

            function self2:EnableThinProject(Enable)
                thinProject = Enable == true
            end

            function self2:ChangeToggleKey(NewKey)
                finityData.ToggleKey = NewKey
                if finityData.UpConnection then
                    finityData.UpConnection:Disconnect()
                end
                finityData.UpConnection = finity.gs["UserInputService"].InputEnded:Connect(function(Input)
                    if Input.KeyCode == finityData.ToggleKey and not typing and finityData.CanToggle then
                        toggled = not toggled
                        self2.modal.Modal = toggled
                        if toggled then
                            self2.container.Active = true
                            self2.container:TweenPosition(savedposition, "Out", "Sine", 0.5, true)
                        else
                            self2.container:TweenPosition(UDim2.new(savedposition.Width.Scale, savedposition.Width.Offset, 1.5, 0), "Out", "Sine", 0.5, true)
                        end
                    end
                end)
            end

            function self2:ChangeBackgroundImage(ImageID, Transparency)
                self2.container.Image = GetAssetFunc(ImageID)
                self2.container.ImageTransparency = Transparency or 0
                if Transparency and Transparency > 1 then
                    warn("Transparency should be between 0 and 1. Setting to 1.")
                    self2.container.ImageTransparency = 1
                end
            end

            finityData.UpConnection = finity.gs["UserInputService"].InputEnded:Connect(function(Input)
                if Input.KeyCode == finityData.ToggleKey and not typing and finityData.CanToggle then
                    toggled = not toggled
                    if toggled then
                        self2.container:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Sine", 0.5, true)
                    else
                        self2.container:TweenPosition(UDim2.new(0.5, 0, 1.5, 0), "Out", "Sine", 0.5, true)
                    end
                end
            end)

            self2.userinterface = self:Create("ScreenGui", {
                Name = "Finity",
                ZIndexBehavior = Enum.ZIndexBehavior.Global,
                ResetOnSpawn = false,
                Parent = finity.gs["CoreGui"]
            })

            self2.container = self:Create("ImageLabel", {
                Draggable = true,
                Active = true,
                Name = "Container",
                AnchorPoint = Vector2.new(0.5, 0.5),
                BackgroundTransparency = 0,
                BackgroundColor3 = theme.main_container,
                BorderSizePixel = 0,
                Position = UDim2.new(0.5, 0, 0.5, 0),
                Size = UDim2.new(0, 800, 0, 500),
                ZIndex = 2,
                ImageTransparency = 1
            })

            self2.modal = self:Create("TextButton", {
                Text = "",
                Transparency = 1,
                Modal = true
            })

            self2.modal.Parent = self2.userinterface
            self2.container.Draggable = true
            self2.container.Active = true

            if thinProject and typeof(thinProject) == "UDim2" then
                self2.container.Size = thinProject
            end

            self2.sidebar = self:Create("Frame", {
                Name = "Sidebar",
                BackgroundTransparency = 1,
                Size = UDim2.new(0, 120, 1, -30),
                Position = UDim2.new(0, 0, 0, 30),
                ZIndex = 2,
            })

            self2.categories = self:Create("Frame", {
                Name = "Categories",
                BackgroundTransparency = 1,
                ClipsDescendants = true,
                Size = UDim2.new(1, -120, 1, -30),
                AnchorPoint = Vector2.new(1, 0),
                Position = UDim2.new(1, 0, 0, 30),
                ZIndex = 2,
            })

            self2.topbar = self:Create("Frame", {
                Name = "Topbar",
                ZIndex = 2,
                Size = UDim2.new(1, 0, 0, 30),
                BackgroundTransparency = 1
            })

            self2.title = self:Create("TextLabel", {
                Name = "Title",
                ZIndex = 2,
                Size = UDim2.new(1, -30, 0, 30),
                Position = UDim2.new(0, 30, 0, 0),
                Font = Enum.Font.GothamSemibold,
                TextSize = 13,
                TextXAlignment = Enum.TextXAlignment.Left,
                BackgroundTransparency = 1,
                TextColor3 = theme.text_color,
            })

            local separator = self:Create("Frame", {
                Name = "Separator",
                BackgroundColor3 = theme.separator_color,
                BorderSizePixel = 0,
                Position = UDim2.new(0, 118, 0, 30),
                Size = UDim2.new(0, 1, 1, -30),
                ZIndex = 6,
            })
            separator.Parent = self2.container

            separator = self:Create("Frame", {
                Name = "Separator",
                BackgroundColor3 = theme.separator_color,
                BorderSizePixel = 0,
                Position = UDim2.new(0, 0, 0, 30),
                Size = UDim2.new(1, 0, 0, 1),
                ZIndex = 6,
            })
            separator.Parent = self2.container

            local uipagelayout = self:Create("UIPageLayout", {
                Padding = UDim.new(0, 10),
                FillDirection = Enum.FillDirection.Vertical,
                TweenTime = 0.7,
                EasingStyle = Enum.EasingStyle.Quad,
                EasingDirection = Enum.EasingDirection.InOut,
                SortOrder = Enum.SortOrder.LayoutOrder,
            })
            uipagelayout.Parent = self2.categories

            local uipadding = self:Create("UIPadding", {
                PaddingTop = UDim.new(0, 3),
                PaddingLeft = UDim.new(0, 2)
            })
            uipadding.Parent = self2.sidebar

            local uilistlayout = self:Create("UIListLayout", {
                SortOrder = Enum.SortOrder.LayoutOrder
            })
            uilistlayout.Parent = self2.sidebar

            function self2:ToastMessage(TopText, BottomText, Duration, Alert_Type, CustomBackgroundIcon)
                local notificationwindow = finity:Create("Frame", {
                    BackgroundTransparency = 1,
                    Active = false,
                    Parent = self2.userinterface,
                    Size = UDim2.new(1, 0, 1, 0),
                    Name = "NotifWindow"
                })

                notificationwindow.ChildRemoved:Connect(function()
                    for i, v in pairs(notificationwindow:GetChildren()) do
                        finity.bettertween(v, UDim2.new(1, v.Position.X.Offset, 1, -(150 + 80 * (i - 1))), Enum.EasingDirection.In, Enum.EasingStyle.Sine, Duration, true)
                    end
                end)

                TopText = TopText or "No Title set."
                BottomText = BottomText or "No Content set."
                Duration = Duration or 10
                Alert_Type = Alert_Type or "Warn"

                local offset = #notificationwindow:GetChildren()
                local container = finity:Create("Frame", {
                    Size = UDim2.new(0, 266, 0, 75),
                    Position = UDim2.new(1, 0, 1, -(150 + 80 * offset)),
                    BackgroundTransparency = 0,
                    BackgroundColor3 = theme.main_container,
                    BorderSizePixel = 0,
                    Parent = notificationwindow,
                    Visible = true,
                    ClipsDescendants = false,
                    Name = "container"
                })

                local backgroundImg = finity:Create("ImageLabel", {
                    SliceCenter = Rect.new(67, 59, 323, 120),
                    Position = UDim2.new(0, -61, 0, -50),
                    BackgroundTransparency = 1,
                    Name = "backgroundImg",
                    ScaleType = Enum.ScaleType.Slice,
                    Size = UDim2.new(1, 61, 0, 159),
                    Parent = container,
                })

                if CustomBackgroundIcon and CustomBackgroundIcon ~= "" and CustomBackgroundIcon ~= " " then
                    backgroundImg.Image = GetAssetFunc(CustomBackgroundIcon)
                end

                local uicorner = finity:Create("UICorner", {
                    CornerRadius = UDim.new(0, 6),
                    Parent = container
                })

                local frame2 = finity:Create("ImageLabel", {
                    BackgroundColor3 = theme.main_container,
                    Name = "Timer",
                    BackgroundTransparency = 0,
                    SliceCenter = Rect.new(2, 0, 224, 2),
                    Size = UDim2.new(1, 0, 0, 2),
                    ScaleType = Enum.ScaleType.Slice,
                    Position = UDim2.new(0, 3, 1, -3),
                    ZIndex = 2,
                    Active = true,
                    Image = GetAssetFunc("FinityGUI/assets/NotificationBar.png"),
                    BorderSizePixel = 0,
                    Parent = container
                })

                if Alert_Type == "Warning" then
                    local icon = finity:Create("ImageLabel", {
                        Name = "AlertIcon",
                        Image = GetAssetFunc('FinityGUI/assets/WarningNotification.png'),
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        Position = UDim2.new(0, -17, 0, -6),
                        Size = UDim2.new(0, 90, 0, 90),
                        Parent = container
                    })
                elseif Alert_Type == "Info" then
                    local icon = finity:Create("ImageLabel", {
                        Name = "AlertIcon",
                        Image = GetAssetFunc('FinityGUI/assets/InfoNotification.png'),
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        Position = UDim2.new(0, -17, 0, -6),
                        Size = UDim2.new(0, 90, 0, 90),
                        Parent = container
                    })
                elseif Alert_Type == "Success" then
                    local icon = finity:Create("ImageLabel", {
                        Name = "AlertIcon",
                        Image = GetAssetFunc('FinityGUI/assets/Success.png'),
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        Position = UDim2.new(0, 7, 0, 14),
                        Size = UDim2.new(0, 40, 0, 40),
                        Parent = container
                    })
                end

                if Alert_Type == "Info" then
                    local Title = finity:Create("TextLabel", {
                        Font = Enum.Font.GothamSemibold,
                        TextSize = 13,
                        RichText = true,
                        TextWrapped = true,
                        TextScaled = true,
                        TextTransparency = 0,
                        TextColor3 = theme.notification_info,
                        BackgroundTransparency = 1,
                        Position = UDim2.new(0, 56, 0, 18),
                        TextXAlignment = Enum.TextXAlignment.Left,
                        TextYAlignment = Enum.TextYAlignment.Top,
                        Text = "<b>"..TopText.."</b>",
                        Parent = container
                    })
                    local Content = Title:Clone()
                    Content.Position = UDim2.new(0, 56, 0, 44)
                    Content.Font = Enum.Font.GothamSemibold
                    Content.TextTransparency = 0
                    Content.TextColor3 = theme.notification_info
                    Content.Text = BottomText
                    Content.Parent = container
                elseif Alert_Type == "Warning" then
                    local Title = finity:Create("TextLabel", {
                        Font = Enum.Font.GothamSemibold,
                        TextSize = 13,
                        RichText = true,
                        TextWrapped = true,
                        TextScaled = true,
                        TextTransparency = 0,
                        TextColor3 = theme.notification_warn,
                        BackgroundTransparency = 1,
                        Position = UDim2.new(0, 56, 0, 18),
                        TextXAlignment = Enum.TextXAlignment.Left,
                        TextYAlignment = Enum.TextYAlignment.Top,
                        Text = TopText,
                        Parent = container
                    })
                    local Content = Title:Clone()
                    Content.Position = UDim2.new(0, 56, 0, 44)
                    Content.Font = Enum.Font.GothamSemibold
                    Content.TextTransparency = 0
                    Content.TextColor3 = theme.notification_info
                    Content.Text = BottomText
                    Content.Parent = container
                elseif Alert_Type == "Success" then
                    local Title = finity:Create("TextLabel", {
                        Font = Enum.Font.GothamSemibold,
                        TextSize = 13,
                        RichText = true,
                        TextWrapped = true,
                        TextScaled = true,
                        TextTransparency = 0,
                        TextColor3 = theme.notification_success,
                        BackgroundTransparency = 1,
                        Position = UDim2.new(0, 56, 0, 18),
                        TextXAlignment = Enum.TextXAlignment.Left,
                        TextYAlignment = Enum.TextYAlignment.Top,
                        Text = TopText,
                        Parent = container
                    })
                    local Content = Title:Clone()
                    Content.Position = UDim2.new(0, 56, 0, 44)
                    Content.Font = Enum.Font.GothamSemibold
                    Content.TextTransparency = 0
                    Content.TextColor3 = theme.notification_info
                    Content.Text = BottomText
                    Content.Parent = container
                end

                container.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        task.spawn(function()
                            pcall(function()
                                finity.bettertween2(container, UDim2.new(1, -262, 1, -(150 + 80 * offset)), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.15, true)
                                task.wait(0.15)
                                finity.bettertween2(container, UDim2.new(1, 0, 1, container.Position.Y.Offset), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.15, true)
                                task.wait(0.15)
                                container:Destroy()
                            end)
                        end)
                    end
                end)

                task.spawn(function()
                    pcall(function()
                        finity.bettertween2(container, UDim2.new(1, -262, 1, -(150 + 80 * offset)), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.15, true)
                        task.wait(0.15)
                        frame2:TweenSize(UDim2.new(0, 0, 0, 2), Enum.EasingDirection.In, Enum.EasingStyle.Linear, Duration, true)
                        task.wait(Duration)
                        finity.bettertween2(container, UDim2.new(1, 0, 1, container.Position.Y.Offset), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.15, true)
                        task.wait(0.15)
                        container:Destroy()
                    end)
                end)

                return container
            end

            function self2:Category(name)
                local category = {}
                category.button = finity:Create("TextButton", {
                    Name = name,
                    BackgroundColor3 = theme.category_button_background,
                    BackgroundTransparency = 1,
                    BorderMode = Enum.BorderMode.Inset,
                    BorderColor3 = theme.category_button_border,
                    Size = UDim2.new(1, -4, 0, 25),
                    ZIndex = 2,
                    AutoButtonColor = false,
                    Font = Enum.Font.GothamSemibold,
                    Text = name,
                    TextColor3 = theme.text_color,
                    TextSize = 14
                })

                category.container = finity:Create("ScrollingFrame", {
                    Name = name,
                    BackgroundTransparency = 1,
                    ScrollBarThickness = 4,
                    BorderSizePixel = 0,
                    Size = UDim2.new(1, 0, 1, 0),
                    ZIndex = 2,
                    CanvasSize = UDim2.new(0, 0, 0, 0),
                    ScrollBarImageColor3 = theme.scrollbar_color,
                    BottomImage = GetAssetFunc("FinityGUI/assets/ScrollBar.png"),
                    MidImage = GetAssetFunc("FinityGUI/assets/ScrollBar.png"),
                    TopImage = GetAssetFunc("FinityGUI/assets/ScrollBar.png"),
                    ScrollBarImageTransparency = 1
                })

                category.hider = finity:Create("Frame", {
                    Name = "Hider",
                    BackgroundTransparency = 0,
                    BorderSizePixel = 0,
                    BackgroundColor3 = theme.main_container,
                    Size = UDim2.new(1, 0, 1, 0),
                    ZIndex = 5
                })

                category.L = finity:Create("Frame", {
                    Name = "L",
                    BackgroundTransparency = 1,
                    Position = UDim2.new(0, 10, 0, 3),
                    Size = UDim2.new(0.5, -20, 1, -3),
                    ZIndex = 2
                })

                if not thinProject then
                    category.R = finity:Create("Frame", {
                        Name = "R",
                        AnchorPoint = Vector2.new(1, 0),
                        BackgroundTransparency = 1,
                        Position = UDim2.new(1, -10, 0, 3),
                        Size = UDim2.new(0.5, -20, 1, -3),
                        ZIndex = 2
                    })
                end

                if thinProject then
                    category.L.Size = UDim2.new(1, -20, 1, -3)
                end

                if firstCategory then
                    finity.gs["TweenService"]:Create(category.hider, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
                    finity.gs["TweenService"]:Create(category.container, TweenInfo.new(0.3), {ScrollBarImageTransparency = 0}):Play()
                end

                do
                    local uilistlayout = finity:Create("UIListLayout", { SortOrder = Enum.SortOrder.LayoutOrder })
                    local uilistlayout2 = finity:Create("UIListLayout", { SortOrder = Enum.SortOrder.LayoutOrder })

                    local function computeSizeChange()
                        local largestListSize = uilistlayout.AbsoluteContentSize.Y
                        if uilistlayout2.AbsoluteContentSize.Y > largestListSize then
                            largestListSize = uilistlayout2.AbsoluteContentSize.Y
                        end
                        category.container.CanvasSize = UDim2.new(0, 0, 0, largestListSize + 5)
                    end

                    uilistlayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(computeSizeChange)
                    uilistlayout2:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(computeSizeChange)

                    uilistlayout.Parent = category.L
                    uilistlayout2.Parent = category.R
                end

                category.button.MouseEnter:Connect(function()
                    finity.gs["TweenService"]:Create(category.button, TweenInfo.new(0.2), {BackgroundTransparency = 0.5}):Play()
                end)
                category.button.MouseLeave:Connect(function()
                    finity.gs["TweenService"]:Create(category.button, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
                end)

                category.button.MouseButton1Down:Connect(function()
                    for _, categoryf in next, self2.userinterface["Container"]["Categories"]:GetChildren() do
                        if categoryf:IsA("ScrollingFrame") and categoryf ~= category.container then
                            finity.gs["TweenService"]:Create(categoryf.Hider, TweenInfo.new(0.3), {BackgroundTransparency = 0}):Play()
                            finity.gs["TweenService"]:Create(categoryf, TweenInfo.new(0.3), {ScrollBarImageTransparency = 1}):Play()
                        end
                    end
                    finity.gs["TweenService"]:Create(category.button, TweenInfo.new(0.2), {BackgroundTransparency = 0.2}):Play()
                    finity.gs["TweenService"]:Create(category.hider, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
                    finity.gs["TweenService"]:Create(category.container, TweenInfo.new(0.3), {ScrollBarImageTransparency = 0}):Play()
                    self2.categories["UIPageLayout"]:JumpTo(category.container)
                end)

                category.button.MouseButton1Up:Connect(function()
                    finity.gs["TweenService"]:Create(category.button, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
                end)

                category.container.Parent = self2.categories
                category.button.Parent = self2.sidebar
                if not thinProject then category.R.Parent = category.container end
                category.L.Parent = category.container
                category.hider.Parent = category.container

                local function calculateSector()
                    if thinProject then return "L" end
                    local R = #category.R:GetChildren() - 1
                    local L = #category.L:GetChildren() - 1
                    return L > R and "R" or "L"
                end

                function category:Sector(name)
                    local sector = {}
                    sector.frame = finity:Create("Frame", {
                        Name = name,
                        BackgroundTransparency = 1,
                        Size = UDim2.new(1, 0, 0, 25),
                        ZIndex = 2
                    })

                    sector.container = finity:Create("Frame", {
                        Name = "Container",
                        BackgroundTransparency = 1,
                        Position = UDim2.new(0, 0, 0, 22),
                        Size = UDim2.new(1, -5, 1, -30),
                        ZIndex = 2
                    })

                    sector.title = finity:Create("TextLabel", {
                        Name = "Title",
                        Text = name,
                        BackgroundTransparency = 1,
                        Size = UDim2.new(1, -5, 0, 25),
                        ZIndex = 2,
                        Font = Enum.Font.GothamSemibold,
                        TextColor3 = theme.text_color,
                        TextSize = 14,
                        TextXAlignment = Enum.TextXAlignment.Left,
                    })

                    local uilistlayout = finity:Create("UIListLayout", { SortOrder = Enum.SortOrder.LayoutOrder })
                    uilistlayout.Changed:Connect(function()
                        pcall(function()
                            sector.frame.Size = UDim2.new(1, 0, 0, sector.container["UIListLayout"].AbsoluteContentSize.Y + 25)
                            sector.container.Size = UDim2.new(1, 0, 0, sector.container["UIListLayout"].AbsoluteContentSize.Y)
                        end)
                    end)
                    uilistlayout.Parent = sector.container

                    function sector:Cheat(kind, name, callback, data)
                        local cheat = { value = nil }
                        cheat.frame = finity:Create("Frame", {
                            Name = name,
                            BackgroundTransparency = 1,
                            Size = UDim2.new(1, 0, 0, 25),
                            ZIndex = 2,
                        })

                        cheat.label = finity:Create("TextLabel", {
                            Name = "Title",
                            BackgroundTransparency = 1,
                            Size = UDim2.new(1, 0, 1, 0),
                            ZIndex = 2,
                            Font = Enum.Font.Gotham,
                            TextColor3 = theme.text_color,
                            TextSize = 13,
                            RichText = true,
                            TextWrapped = true,
                            TextScaled = true,
                            TextXAlignment = Enum.TextXAlignment.Left
                        })

                        cheat.container = finity:Create("Frame", {
                            Name = "Container",
                            AnchorPoint = Vector2.new(1, 0.5),
                            BackgroundTransparency = 1,
                            Position = UDim2.new(1, 0, 0.5, 0),
                            Size = UDim2.new(0, 150, 0, 22),
                            ZIndex = 2,
                        })

                        if kind then
                            if string.lower(kind) == "label" then
                                cheat.label.Text = name
                                function cheat:SetValue(value)
                                    cheat.label.Text = tostring(value)
                                end
                            elseif string.lower(kind) == "checkbox" or string.lower(kind) == "toggle" then
                                cheat.value = data and data.enabled or false
                                cheat.label.Text = name
                                cheat.checkbox = finity:Create("Frame", {
                                    Name = "Checkbox",
                                    AnchorPoint = Vector2.new(1, 0),
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(1, 0, 0, 0),
                                    Size = UDim2.new(0, 25, 0, 25),
                                    ZIndex = 2,
                                })

                                cheat.outerbox = finity:Create("ImageLabel", {
                                    Name = "Outer",
                                    AnchorPoint = Vector2.new(1, 0.5),
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(1, 0, 0.5, 0),
                                    Size = UDim2.new(0, 20, 0, 20),
                                    ZIndex = 2,
                                    Image = GetAssetFunc("FinityGUI/assets/CheatBackground.png"),
                                    ImageColor3 = theme.checkbox_outer,
                                    ScaleType = Enum.ScaleType.Slice,
                                    SliceCenter = Rect.new(100, 100, 100, 100),
                                    SliceScale = 0.06,
                                })

                                cheat.checkboxbutton = finity:Create("ImageButton", {
                                    AnchorPoint = Vector2.new(0.5, 0.5),
                                    Name = "CheckboxButton",
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0.5, 0, 0.5, 0),
                                    Size = UDim2.new(0, 14, 0, 14),
                                    ZIndex = 2,
                                    Image = GetAssetFunc("FinityGUI/assets/CheatBoxStuff.png"),
                                    ImageColor3 = theme.checkbox_inner,
                                    ScaleType = Enum.ScaleType.Slice,
                                    SliceCenter = Rect.new(100, 100, 100, 100),
                                    SliceScale = 0.04
                                })

                                if data and data.enabled then
                                    finity.gs["TweenService"]:Create(cheat.outerbox, TweenInfo.new(0.2), {ImageColor3 = theme.checkbox_checked}):Play()
                                    finity.gs["TweenService"]:Create(cheat.checkboxbutton, TweenInfo.new(0.2), {ImageColor3 = theme.checkbox_checked}):Play()
                                end

                                cheat.checkboxbutton.MouseEnter:Connect(function()
                                    local lightertheme = Color3.fromRGB((theme.checkbox_outer.R * 255) + 20, (theme.checkbox_outer.G * 255) + 20, (theme.checkbox_outer.B * 255) + 20)
                                    finity.gs["TweenService"]:Create(cheat.outerbox, TweenInfo.new(0.2), {ImageColor3 = lightertheme}):Play()
                                end)

                                cheat.checkboxbutton.MouseLeave:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.outerbox, TweenInfo.new(0.2), {ImageColor3 = cheat.value and theme.checkbox_checked or theme.checkbox_outer}):Play()
                                end)

                                cheat.checkboxbutton.MouseButton1Down:Connect(function()
                                    if cheat.value then
                                        finity.gs["TweenService"]:Create(cheat.checkboxbutton, TweenInfo.new(0.2), {ImageColor3 = theme.checkbox_outer}):Play()
                                    else
                                        finity.gs["TweenService"]:Create(cheat.checkboxbutton, TweenInfo.new(0.2), {ImageColor3 = theme.checkbox_checked_inner}):Play()
                                    end
                                end)

                                cheat.checkboxbutton.MouseButton1Up:Connect(function()
                                    cheat.value = not cheat.value
                                    if callback then
                                        local s, e = pcall(function() callback(cheat.value) end)
                                        if not s then warn("error: ".. e) end
                                    end
                                    if cheat.value then
                                        finity.gs["TweenService"]:Create(cheat.outerbox, TweenInfo.new(0.2), {ImageColor3 = theme.checkbox_checked}):Play()
                                    else
                                        finity.gs["TweenService"]:Create(cheat.outerbox, TweenInfo.new(0.2), {ImageColor3 = theme.checkbox_outer}):Play()
                                        finity.gs["TweenService"]:Create(cheat.checkboxbutton, TweenInfo.new(0.2), {ImageColor3 = theme.checkbox_inner}):Play()
                                    end
                                end)

                                cheat.checkboxbutton.Parent = cheat.outerbox
                                cheat.outerbox.Parent = cheat.container
                            elseif string.lower(kind) == "color" or string.lower(kind) == "colorpicker" then
                                cheat.label.Text = name
                                cheat.value = data and data.color or Color3.new(1, 1, 1)

                                cheat.hsvbar = finity:Create("ImageButton", {
                                    AnchorPoint = Vector2.new(0.5, 0.5),
                                    Name = "HSVBar",
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0.5, 0, 0.5, 0),
                                    Size = UDim2.new(1, 0, 0, 6),
                                    ZIndex = 2,
                                    Image = GetAssetFunc("FinityGUI/assets/HSVBar.png")
                                })

                                cheat.arrowpreview = finity:Create("ImageLabel", {
                                    Name = "ArrowPreview",
                                    BackgroundTransparency = 1,
                                    ImageTransparency = 0.25,
                                    Position = UDim2.new(0.5, 0, 0.5, -6),
                                    Size = UDim2.new(0, 6, 0, 6),
                                    ZIndex = 3,
                                    Image = GetAssetFunc("FinityGUI/assets/Arrow.png"),
                                    Rotation = -90
                                })

                                cheat.hsvbar.MouseButton1Down:Connect(function()
                                    local rs = finity.gs["RunService"]
                                    local uis = finity.gs["UserInputService"]
                                    local last = cheat.value
                                    cheat.hsvbar.Image = GetAssetFunc("FinityGUI/assets/HSVBar.png")

                                    while uis:IsMouseButtonPressed('MouseButton1') do
                                        local mouseloc = uis:GetMouseLocation()
                                        local sx = cheat.arrowpreview.AbsoluteSize.X / 2
                                        local offset = (mouseloc.x - cheat.hsvbar.AbsolutePosition.X) - sx
                                        local scale = offset / cheat.hsvbar.AbsoluteSize.X
                                        local position = math.clamp(offset, -sx, cheat.hsvbar.AbsoluteSize.X - sx) / cheat.hsvbar.AbsoluteSize.X

                                        finity.gs["TweenService"]:Create(cheat.arrowpreview, TweenInfo.new(0.1), {Position = UDim2.new(position, 0, 0.5, -6)}):Play()
                                        cheat.value = Color3.fromHSV(math.clamp(scale, 0, 1), 1, 1)

                                        if cheat.value ~= last then
                                            last = cheat.value
                                            if callback then
                                                local s, e = pcall(function() callback(cheat.value) end)
                                                if not s then warn("error: ".. e) end
                                            end
                                        end
                                        rs.RenderStepped:wait()
                                    end
                                end)

                                cheat.hsvbar.MouseButton2Down:Connect(function()
                                    local rs = finity.gs["RunService"]
                                    local uis = finity.gs["UserInputService"]
                                    local last = cheat.value
                                    cheat.hsvbar.Image = GetAssetFunc("FinityGUI/assets/lumienceimage.png")

                                    while uis:IsMouseButtonPressed('MouseButton2') do
                                        local mouseloc = uis:GetMouseLocation()
                                        local sx = cheat.arrowpreview.AbsoluteSize.X / 2
                                        local offset = (mouseloc.x - cheat.hsvbar.AbsolutePosition.X) - sx
                                        local scale = offset / cheat.hsvbar.AbsoluteSize.X
                                        local position = math.clamp(offset, -sx, cheat.hsvbar.AbsoluteSize.X - sx) / cheat.hsvbar.AbsoluteSize.X

                                        finity.gs["TweenService"]:Create(cheat.arrowpreview, TweenInfo.new(0.1), {Position = UDim2.new(position, 0, 0.5, -6)}):Play()
                                        cheat.value = Color3.fromHSV(1, 0, 1 - math.clamp(scale, 0, 1))

                                        if cheat.value ~= last then
                                            last = cheat.value
                                            if callback then
                                                local s, e = pcall(function() callback(cheat.value) end)
                                                if not s then warn("error: ".. e) end
                                            end
                                        end
                                        rs.RenderStepped:wait()
                                    end
                                end)

                                function cheat:SetValue(value)
                                    cheat.value = value
                                    if callback then
                                        local s, e = pcall(function() callback(cheat.value) end)
                                        if not s then warn("error: "..e) end
                                    end
                                end

                                cheat.hsvbar.Parent = cheat.container
                                cheat.arrowpreview.Parent = cheat.hsvbar
                            elseif string.lower(kind) == "dropdown" or string.lower(kind) == "menu" then
                                cheat.value = data and (data.default or (data.options and data.options[1])) or "None"
                                cheat.label.Text = name
                                local options = data and data.options or {}
                                cheat.dropped = false

                                cheat.dropdown = finity:Create("ImageButton", {
                                    Name = "Dropdown",
                                    BackgroundTransparency = 1,
                                    BorderSizePixel = 5,
                                    BorderColor3 = theme.category_button_border,
                                    Size = UDim2.new(1, 0, 1, 0),
                                    ZIndex = 2,
                                    Image = GetAssetFunc("FinityGUI/assets/DropDown.png"),
                                    ImageColor3 = theme.dropdown_background,
                                    ImageTransparency = 0.5,
                                    ScaleType = Enum.ScaleType.Slice,
                                    SliceCenter = Rect.new(100, 100, 100, 100),
                                    SliceScale = 0.002
                                })

                                cheat.selected = finity:Create("TextLabel", {
                                    Name = "Selected",
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0, 10, 0, 0),
                                    Size = UDim2.new(1, -35, 1, 0),
                                    ZIndex = 3,
                                    Font = Enum.Font.GothamSemibold,
                                    Text = tostring(cheat.value),
                                    TextColor3 = theme.dropdown_text,
                                    TextSize = 13,
                                    TextXAlignment = Enum.TextXAlignment.Left,
                                })

                                cheat.list = finity:Create("ScrollingFrame", {
                                    Name = "List",
                                    BackgroundColor3 = theme.dropdown_background,
                                    BackgroundTransparency = 0.5,
                                    BorderSizePixel = 0,
                                    Position = UDim2.new(0, 0, 1, 0),
                                    Size = UDim2.new(1, 0, 0, 100),
                                    ZIndex = 4,
                                    BottomImage = GetAssetFunc("FinityGUI/assets/CheatList.png"),
                                    MidImage = GetAssetFunc("FinityGUI/assets/CheatList.png"),
                                    TopImage = GetAssetFunc("FinityGUI/assets/CheatList.png"),
                                    ScrollBarThickness = theme.dropdown_scrollbar_thickness,
                                    VerticalScrollBarInset = Enum.ScrollBarInset.None,
                                    ScrollBarImageColor3 = theme.dropdown_scrollbar_color
                                })

                                local uilistlayout = finity:Create("UIListLayout", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 2) })
                                uilistlayout.Parent = cheat.list
                                local uipadding = finity:Create("UIPadding", { PaddingLeft = UDim.new(0, 2) })
                                uipadding.Parent = cheat.list

                                function cheat.refreshOptions()
                                    if cheat.dropped then cheat.fadelist() end
                                    for _, child in next, cheat.list:GetChildren() do
                                        if child:IsA("TextButton") then child:Destroy() end
                                    end
                                    for _, value in next, options do
                                        local button = finity:Create("TextButton", {
                                            BackgroundTransparency = 1,
                                            Size = UDim2.new(1, 0, 0, 20),
                                            ZIndex = 3,
                                            Font = Enum.Font.Gotham,
                                            Text = value,
                                            TextColor3 = theme.dropdown_text,
                                            TextSize = 13
                                        })
                                        button.Parent = cheat.list
                                        button.MouseEnter:Connect(function()
                                            finity.gs["TweenService"]:Create(button, TweenInfo.new(0.5), {TextColor3 = theme.dropdown_text_hover}):Play()
                                        end)
                                        button.MouseLeave:Connect(function()
                                            finity.gs["TweenService"]:Create(button, TweenInfo.new(0.5), {TextColor3 = theme.dropdown_text}):Play()
                                        end)
                                        button.MouseButton1Click:Connect(function()
                                            if cheat.dropped then
                                                cheat.value = value
                                                cheat.selected.Text = value
                                                cheat.fadelist()
                                                if callback then
                                                    local s, e = pcall(function() callback(cheat.value) end)
                                                    if not s then warn("error: ".. e) end
                                                end
                                            end
                                        end)
                                        finity.gs["TweenService"]:Create(button, TweenInfo.new(0), {TextTransparency = 1}):Play()
                                    end
                                    finity.gs["TweenService"]:Create(cheat.list, TweenInfo.new(0), {Size = UDim2.new(1, 0, 0, 0), Position = UDim2.new(0, 0, 1, 0), CanvasSize = UDim2.new(0, 0, 0, cheat.list["UIListLayout"].AbsoluteContentSize.Y), ScrollBarImageTransparency = 1, BackgroundTransparency = 1}):Play()
                                end

                                function cheat.fadelist()
                                    cheat.dropped = not cheat.dropped
                                    if cheat.dropped then
                                        for _, button in next, cheat.list:GetChildren() do
                                            if button:IsA("TextButton") then
                                                finity.gs["TweenService"]:Create(button, TweenInfo.new(0.2), {TextTransparency = 0}):Play()
                                            end
                                        end
                                        finity.gs["TweenService"]:Create(cheat.list, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, math.clamp(cheat.list["UIListLayout"].AbsoluteContentSize.Y, 0, 150)), Position = UDim2.new(0, 0, 1, 0), ScrollBarImageTransparency = 0, BackgroundTransparency = 0.5}):Play()
                                    else
                                        for _, button in next, cheat.list:GetChildren() do
                                            if button:IsA("TextButton") then
                                                finity.gs["TweenService"]:Create(button, TweenInfo.new(0.2), {TextTransparency = 1}):Play()
                                            end
                                        end
                                        finity.gs["TweenService"]:Create(cheat.list, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 0), Position = UDim2.new(0, 0, 1, 0), ScrollBarImageTransparency = 1, BackgroundTransparency = 1}):Play()
                                    end
                                end

                                cheat.dropdown.MouseEnter:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.selected, TweenInfo.new(0.1), {TextColor3 = theme.dropdown_text_hover}):Play()
                                end)
                                cheat.dropdown.MouseLeave:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.selected, TweenInfo.new(0.1), {TextColor3 = theme.dropdown_text}):Play()
                                end)
                                cheat.dropdown.MouseButton1Click:Connect(function()
                                    cheat.fadelist()
                                end)

                                cheat.refreshOptions()

                                function cheat:RemoveOption(value)
                                    local removed = false
                                    for index, option in next, options do
                                        if option == value then
                                            table.remove(options, index)
                                            removed = true
                                            break
                                        end
                                    end
                                    if removed then
                                        if cheat.dropped then cheat.fadelist() end
                                        cheat.refreshOptions()
                                    end
                                    return removed
                                end

                                function cheat:AddOption(value)
                                    if not table.find(options, value) then
                                        table.insert(options, value)
                                    end
                                    if cheat.dropped then cheat.fadelist() end
                                    cheat.refreshOptions()
                                end

                                function cheat:SetValue(value)
                                    cheat.selected.Text = value
                                    cheat.value = value
                                    if cheat.dropped then cheat.fadelist() end
                                    if callback then
                                        local s, e = pcall(function() callback(cheat.value) end)
                                        if not s then warn("error: ".. e) end
                                    end
                                end

                                cheat.selected.Parent = cheat.dropdown
                                cheat.dropdown.Parent = cheat.container
                                cheat.list.Parent = cheat.container
                            elseif string.lower(kind) == "textbox" then
                                local placeholdertext = data and data.placeholder or "Enter a value."
                                cheat.label.Text = name

                                cheat.background = finity:Create("ImageLabel", {
                                    Name = "Background",
                                    BackgroundTransparency = 1,
                                    Size = UDim2.new(1, 0, 1, 0),
                                    ZIndex = 2,
                                    Image = GetAssetFunc("FinityGUI/assets/CheatBackground.png"),
                                    ImageColor3 = theme.textbox_background,
                                    ImageTransparency = 0.5,
                                    ScaleType = Enum.ScaleType.Slice,
                                    SliceCenter = Rect.new(100, 100, 100, 100),
                                    SliceScale = 0.02
                                })

                                cheat.textbox = finity:Create("TextBox", {
                                    Name = "Textbox",
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0, 0, 0, 0),
                                    Size = UDim2.new(1, 0, 1, 0),
                                    ZIndex = 2,
                                    Font = Enum.Font.Gotham,
                                    Text = "",
                                    TextColor3 = theme.textbox_text,
                                    PlaceholderText = placeholdertext,
                                    TextSize = 13,
                                    TextXAlignment = Enum.TextXAlignment.Center,
                                    ClearTextOnFocus = false
                                })

                                cheat.background.MouseEnter:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.textbox, TweenInfo.new(0.1), {TextColor3 = theme.textbox_text_hover}):Play()
                                end)
                                cheat.background.MouseLeave:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.textbox, TweenInfo.new(0.1), {TextColor3 = theme.textbox_text}):Play()
                                end)
                                cheat.textbox.Focused:Connect(function()
                                    typing = true
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.textbox_background_hover}):Play()
                                end)
                                cheat.textbox.FocusLost:Connect(function()
                                    typing = false
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.textbox_background}):Play()
                                    finity.gs["TweenService"]:Create(cheat.textbox, TweenInfo.new(0.1), {TextColor3 = theme.textbox_text}):Play()
                                    cheat.value = cheat.textbox.Text
                                    if callback then
                                        local s, e = pcall(function() callback(cheat.value) end)
                                        if not s then warn("error: "..e) end
                                    end
                                end)

                                function cheat:SetValue(value)
                                    cheat.value = tostring(value)
                                    cheat.textbox.Text = tostring(value)
                                end

                                cheat.background.Parent = cheat.container
                                cheat.textbox.Parent = cheat.container
                            elseif string.lower(kind) == "slider" then
                                cheat.value = 0
                                cheat.label.Text = name

                                local suffix = data and data.suffix or ""
                                local minimum = data and data.min or 0
                                local maximum = data and data.max or 1
                                local default = data and data.default
                                local precise = data and data.precise

                                cheat.sliderbar = finity:Create("ImageButton", {
                                    Name = "Sliderbar",
                                    AnchorPoint = Vector2.new(1, 0.5),
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(1, 0, 0.5, 0),
                                    Size = UDim2.new(1, 0, 0, 6),
                                    ZIndex = 2,
                                    Image = GetAssetFunc("FinityGUI/assets/CheatSliderbar.png"),
                                    ImageColor3 = theme.slider_background,
                                    ImageTransparency = 0.5,
                                    ScaleType = Enum.ScaleType.Slice,
                                    SliceCenter = Rect.new(100, 100, 100, 100),
                                    SliceScale = 0.02,
                                })

                                cheat.numbervalue = finity:Create("TextLabel", {
                                    Name = "Value",
                                    AnchorPoint = Vector2.new(0, 0.5),
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0.5, 5, 0.5, 0),
                                    Size = UDim2.new(1, 0, 0, 13),
                                    ZIndex = 2,
                                    Font = Enum.Font.Gotham,
                                    TextXAlignment = Enum.TextXAlignment.Left,
                                    Text = "",
                                    TextTransparency = 1,
                                    TextColor3 = theme.slider_text,
                                    TextSize = 13,
                                })

                                cheat.visiframe = finity:Create("ImageLabel", {
                                    Name = "Frame",
                                    BackgroundTransparency = 1,
                                    Size = UDim2.new(0.5, 0, 1, 0),
                                    ZIndex = 2,
                                    Image = GetAssetFunc("FinityGUI/assets/CheatVisiFrame.png"),
                                    ImageColor3 = theme.slider_color,
                                    ScaleType = Enum.ScaleType.Slice,
                                    SliceCenter = Rect.new(100, 100, 100, 100),
                                    SliceScale = 0.02
                                })

                                if default then
                                    local size = math.clamp(default - minimum, 0, maximum - minimum)
                                    local percent = size / (maximum - minimum)
                                    cheat.value = math.floor((minimum + (maximum - minimum) * percent) * 100) / 100
                                    finity.gs["TweenService"]:Create(cheat.visiframe, TweenInfo.new(0.1), {Size = UDim2.new(percent, 0, 1, 0)}):Play()
                                    if callback then
                                        local s, e = pcall(function() callback(cheat.value) end)
                                        if not s then warn("error: ".. e) end
                                    end
                                end

                                local moveconnection, releaseconnection
                                cheat.sliderbar.MouseButton1Down:Connect(function()
                                    local size = math.clamp(mouse.X - cheat.sliderbar.AbsolutePosition.X, 0, 150)
                                    local percent = size / 150
                                    cheat.value = math.floor((minimum + (maximum - minimum) * percent) * 100) / 100
                                    cheat.numbervalue.Text = suffix .. (precise and tostring(cheat.value) or math.ceil(cheat.value))

                                    if callback then
                                        local s, e = pcall(function() callback(precise and cheat.value or math.ceil(cheat.value)) end)
                                        if not s then warn("error: ".. e) end
                                    end

                                    finity.gs["TweenService"]:Create(cheat.visiframe, TweenInfo.new(0.1), {Size = UDim2.new(size / 150, 0, 1, 0), ImageColor3 = theme.slider_color_sliding}):Play()
                                    finity.gs["TweenService"]:Create(cheat.numbervalue, TweenInfo.new(0.1), {Position = UDim2.new(size / 150, 5, 0.5, 0), TextTransparency = 0}):Play()

                                    moveconnection = mouse.Move:Connect(function()
                                        local size = math.clamp(mouse.X - cheat.sliderbar.AbsolutePosition.X, 0, 150)
                                        local percent = size / 150
                                        cheat.value = math.floor((minimum + (maximum - minimum) * percent) * 100) / 100
                                        cheat.numbervalue.Text = suffix .. (precise and tostring(cheat.value) or math.ceil(cheat.value))

                                        if callback then
                                            local s, e = pcall(function() callback(precise and cheat.value or math.ceil(cheat.value)) end)
                                            if not s then warn("error: ".. e) end
                                        end

                                        finity.gs["TweenService"]:Create(cheat.visiframe, TweenInfo.new(0.1), {Size = UDim2.new(size / 150, 0, 1, 0), ImageColor3 = theme.slider_color_sliding}):Play()
                                        local Position = UDim2.new(size / 150, 5, 0.5, 0)
                                        if Position.Width.Scale >= 0.6 then
                                            Position = UDim2.new(1, -cheat.numbervalue.TextBounds.X, 0.5, 10)
                                        end
                                        finity.gs["TweenService"]:Create(cheat.numbervalue, TweenInfo.new(0.1), {Position = Position, TextTransparency = 0}):Play()
                                    end)

                                    releaseconnection = finity.gs["UserInputService"].InputEnded:Connect(function(Mouse)
                                        if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
                                            finity.gs["TweenService"]:Create(cheat.visiframe, TweenInfo.new(0.1), {ImageColor3 = theme.slider_color}):Play()
                                            finity.gs["TweenService"]:Create(cheat.numbervalue, TweenInfo.new(0.1), {TextTransparency = 1}):Play()
                                            moveconnection:Disconnect()
                                            releaseconnection:Disconnect()
                                        end
                                    end)
                                end)

                                function cheat:SetValue(value)
                                    local percent = (value - minimum) / (maximum - minimum)
                                    cheat.value = value
                                    finity.gs["TweenService"]:Create(cheat.visiframe, TweenInfo.new(0.1), {Size = UDim2.new(percent, 0, 1, 0)}):Play()
                                    if callback then
                                        local s, e = pcall(function() callback(cheat.value) end)
                                        if not s then warn("error: ".. e) end
                                    end
                                end

                                cheat.visiframe.Parent = cheat.sliderbar
                                cheat.numbervalue.Parent = cheat.sliderbar
                                cheat.sliderbar.Parent = cheat.container
                            elseif string.lower(kind) == "button" then
                                cheat.label.Text = name
                                local button_text = data and data.text or "Button"

                                cheat.background = finity:Create("ImageLabel", {
                                    Name = "Background",
                                    BackgroundTransparency = 1,
                                    Size = UDim2.new(1, 0, 1, 0),
                                    ZIndex = 2,
                                    Image = GetAssetFunc("FinityGUI/assets/CheatBackground.png"),
                                    ImageColor3 = theme.button_background,
                                    ImageTransparency = 0.5,
                                    ScaleType = Enum.ScaleType.Slice,
                                    SliceCenter = Rect.new(100, 100, 100, 100),
                                    SliceScale = 0.02
                                })

                                cheat.button = finity:Create("TextButton", {
                                    Name = "Button",
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0, 0, 0, 0),
                                    Size = UDim2.new(1, 0, 1, 0),
                                    ZIndex = 2,
                                    Font = Enum.Font.Gotham,
                                    Text = button_text,
                                    TextColor3 = theme.textbox_text,
                                    TextSize = 13,
                                    TextXAlignment = Enum.TextXAlignment.Center
                                })

                                cheat.button.MouseEnter:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.button_background_hover}):Play()
                                end)
                                cheat.button.MouseLeave:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.button_background}):Play()
                                end)
                                cheat.button.MouseButton1Down:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.button_background_down}):Play()
                                end)
                                cheat.button.MouseButton1Up:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.button_background}):Play()
                                    if callback then
                                        local s, e = pcall(function() callback() end)
                                        if not s then warn("error: ".. e) end
                                    end
                                end)

                                function cheat:Fire()
                                    if callback then
                                        local s, e = pcall(function() callback() end)
                                        if not s then warn("error: ".. e) end
                                    end
                                end

                                cheat.background.Parent = cheat.container
                                cheat.button.Parent = cheat.container
                            elseif string.lower(kind) == "keybind" or string.lower(kind) == "bind" then
                                local callback_bind = data and data.default
                                if data and data.default then
                                    cheat.value = data.default
                                    table.insert(finityData.UsedKeybinds, string.sub(tostring(data.default), 14))
                                end

                                cheat.background = finity:Create("ImageLabel", {
                                    Name = "Background",
                                    BackgroundTransparency = 1,
                                    Size = UDim2.new(1, 0, 1, 0),
                                    ZIndex = 2,
                                    Image = GetAssetFunc("FinityGUI/assets/CheatBackground.png"),
                                    ImageColor3 = theme.button_background,
                                    ImageTransparency = 0.5,
                                    ScaleType = Enum.ScaleType.Slice,
                                    SliceCenter = Rect.new(100, 100, 100, 100),
                                    SliceScale = 0.02
                                })

                                cheat.button = finity:Create("TextButton", {
                                    Name = "Button",
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0, 0, 0, 0),
                                    Size = UDim2.new(1, 0, 1, 0),
                                    ZIndex = 2,
                                    Font = Enum.Font.Gotham,
                                    Text = callback_bind and "Bound to: " .. string.sub(tostring(callback_bind), 14) or "No Key Binded.",
                                    TextColor3 = theme.textbox_text,
                                    TextSize = 13,
                                    TextXAlignment = Enum.TextXAlignment.Center
                                })

                                local connection
                                cheat.button.MouseEnter:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.button_background_hover}):Play()
                                end)
                                cheat.button.MouseLeave:Connect(function()
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.button_background}):Play()
                                end)
                                cheat.button.MouseButton1Down:Connect(function()
                                    finityData.CanToggle = false
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.button_background_down}):Play()
                                end)
                                cheat.button.MouseButton1Up:Connect(function()
                                    finityData.CanToggle = true
                                    finity.gs["TweenService"]:Create(cheat.background, TweenInfo.new(0.2), {ImageColor3 = theme.button_background}):Play()
                                    cheat.button.Text = "Press Any key"
                                    if connection then connection:Disconnect() end

                                    connection = finity.gs["UserInputService"].InputBegan:Connect(function(Input)
                                        if Input.UserInputType.Name == "Keyboard" and Input.KeyCode ~= finityData.ToggleKey and Input.KeyCode ~= Enum.KeyCode.Backspace then
                                            cheat.button.Text = "Bound to: " .. tostring(Input.KeyCode.Name)
                                            callback_bind = Input.KeyCode
                                            cheat.value = Input.KeyCode
                                            if not table.find(finityData.UsedKeybinds, Input.KeyCode.Name) then
                                                table.insert(finityData.UsedKeybinds, Input.KeyCode.Name)
                                            end
                                            if callback then
                                                local s, e = pcall(function() callback(Input.KeyCode) end)
                                                if not s then warn("error: ".. e) end
                                            end
                                            connection:Disconnect()
                                        elseif Input.KeyCode == Enum.KeyCode.Backspace then
                                            callback_bind = nil
                                            cheat.button.Text = "No Key Binded."
                                            cheat.value = nil
                                            if callback then
                                                local s, e = pcall(function() callback() end)
                                                if not s then warn("error: ".. e) end
                                            end
                                            connection:Disconnect()
                                        end
                                    end)
                                end)

                                finity.gs["UserInputService"].InputBegan:Connect(function(Input)
                                    if callback_bind and Input.KeyCode == callback_bind then
                                        if callback then
                                            local s, e = pcall(function() callback(Input.KeyCode) end)
                                            if not s then warn("error: ".. e) end
                                        end
                                    end
                                end)

                                function cheat:SetValue(value)
                                    cheat.value = value
                                    cheat.button.Text = "Bound to: " .. tostring(value)
                                    callback_bind = value
                                end

                                cheat.background.Parent = cheat.container
                                cheat.button.Parent = cheat.container
                            end
                        end

                        cheat.frame.Parent = sector.container
                        cheat.label.Parent = cheat.frame
                        cheat.container.Parent = cheat_\-

                        return cheat
                    end

                    sector.frame.Parent = category[calculateSector()]
                    sector.container.Parent = sector.frame
                    sector.title.Parent = sector.frame
                    return sector
                end

                firstCategory = false
                return category
            end

            self2.container.Parent = self2.userinterface
            self2.categories.Parent = self2.container
            self2.sidebar.Parent = self2.container
            self2.topbar.Parent = self2.container
            self2.title.Parent = self2.topbar

            -- Упрощённая логика установки заголовка
            if Title then
                self2.title.Text = Title .. (not HideToolTip and ToolTipText and " | " .. ToolTipText or "")
            else
                self2.title.Text = "Place holder"
            end

            return self2, finityData
        end
    else
        repeat until game.Loaded
    end
end)

function finity.bettertween2(obj, newpos, dir, style, time, override)
    task.spawn(function()
        local frame = Instance.new("Frame")
        frame.Visible = false
        frame.Position = obj.Position
        frame.Parent = self2.userinterface
        frame.Name = "BetterTween2"
        frame:GetPropertyChangedSignal("Position"):Connect(function()
            obj.Position = UDim2.new(frame.Position.X.Scale, frame.Position.X.Offset, obj.Position.Y.Scale, obj.Position.Y.Offset)
        end)
        pcall(function()
            frame:TweenPosition(newpos, dir, style, time, override)
        end)
        frame.Parent = nil
        task.wait(time)
        frame:Remove()
    end)
end

function finity:EnableDebugging(status)
    debug = status == true
end

if not suc then warn(err) end

return finity
